out=io.open("spectra.dat","a")
indices_asi = S4.NewInterpolator('cubic spline', {
{ 0.24 ,{ -8.25969 , 11.22215 }},
{ 0.242 ,{ -8.27066 , 11.62663 }},
{ 0.244 ,{ -8.2401 , 12.02529 }},
{ 0.246 ,{ -8.25011 , 12.48079 }},
{ 0.248 ,{ -8.18477 , 12.84855 }},
{ 0.25 ,{ -8.1733 , 13.25668 }},
{ 0.252 ,{ -8.16788 , 13.69188 }},
{ 0.254 ,{ -8.18541 , 14.05593 }},
{ 0.256 ,{ -8.16029 , 14.51975 }},
{ 0.258 ,{ -8.07857 , 14.91139 }},
{ 0.26 ,{ -7.99246 , 15.39997 }},
{ 0.262 ,{ -7.95495 , 15.83658 }},
{ 0.264 ,{ -7.85902 , 16.24706 }},
{ 0.266 ,{ -7.76456 , 16.7159 }},
{ 0.268 ,{ -7.61488 , 17.16643 }},
{ 0.27 ,{ -7.49927 , 17.63335 }},
{ 0.272 ,{ -7.32627 , 18.03355 }},
{ 0.274 ,{ -7.17753 , 18.49732 }},
{ 0.276 ,{ -6.99863 , 18.98306 }},
{ 0.278 ,{ -6.81144 , 19.50372 }},
{ 0.28 ,{ -6.58871 , 19.90874 }},
{ 0.282 ,{ -6.35062 , 20.38986 }},
{ 0.284 ,{ -6.07906 , 20.88446 }},
{ 0.286 ,{ -5.82165 , 21.31915 }},
{ 0.288 ,{ -5.49231 , 21.78167 }},
{ 0.29 ,{ -5.20539 , 22.22679 }},
{ 0.292 ,{ -4.88088 , 22.68601 }},
{ 0.294 ,{ -4.53009 , 23.09484 }},
{ 0.296 ,{ -4.16548 , 23.54288 }},
{ 0.298 ,{ -3.76004 , 23.98813 }},
{ 0.3 ,{ -3.33965 , 24.38549 }},
{ 0.302 ,{ -2.89058 , 24.81652 }},
{ 0.304 ,{ -2.44144 , 25.21424 }},
{ 0.306 ,{ -1.98406 , 25.5871 }},
{ 0.308 ,{ -1.50972 , 25.94344 }},
{ 0.31 ,{ -0.99847 , 26.30074 }},
{ 0.312 ,{ -0.47228 , 26.63926 }},
{ 0.314 ,{ 0.04795 , 26.94011 }},
{ 0.316 ,{ 0.5748 , 27.21957 }},
{ 0.318 ,{ 1.11219 , 27.49062 }},
{ 0.32 ,{ 1.66785 , 27.74409 }},
{ 0.322 ,{ 2.25537 , 27.97176 }},
{ 0.324 ,{ 2.86105 , 28.18172 }},
{ 0.326 ,{ 3.48374 , 28.38826 }},
{ 0.328 ,{ 4.0997 , 28.5667 }},
{ 0.33 ,{ 4.66218 , 28.68596 }},
{ 0.332 ,{ 5.2337 , 28.7825 }},
{ 0.334 ,{ 5.88483 , 28.89702 }},
{ 0.336 ,{ 6.55237 , 28.97893 }},
{ 0.338 ,{ 7.19054 , 28.97146 }},
{ 0.34 ,{ 7.80829 , 28.9392 }},
{ 0.342 ,{ 8.39261 , 28.94344 }},
{ 0.344 ,{ 8.97204 , 28.94017 }},
{ 0.346 ,{ 9.57759 , 28.89988 }},
{ 0.348 ,{ 10.18562 , 28.83513 }},
{ 0.35 ,{ 10.7812 , 28.75079 }},
{ 0.352 ,{ 11.3691 , 28.64283 }},
{ 0.354 ,{ 11.95116 , 28.50637 }},
{ 0.356 ,{ 12.52078 , 28.34868 }},
{ 0.358 ,{ 13.06886 , 28.17806 }},
{ 0.36 ,{ 13.60563 , 27.98752 }},
{ 0.362 ,{ 14.14374 , 27.76819 }},
{ 0.364 ,{ 14.66621 , 27.53253 }},
{ 0.366 ,{ 15.15369 , 27.29396 }},
{ 0.368 ,{ 15.62736 , 27.04291 }},
{ 0.37 ,{ 16.10956 , 26.76945 }},
{ 0.372 ,{ 16.57678 , 26.48566 }},
{ 0.374 ,{ 17.00863 , 26.20359 }},
{ 0.376 ,{ 17.41942 , 25.91562 }},
{ 0.378 ,{ 17.81387 , 25.61824 }},
{ 0.38 ,{ 18.19978 , 25.31005 }},
{ 0.382 ,{ 18.59474 , 24.9849 }},
{ 0.384 ,{ 18.97366 , 24.6522 }},
{ 0.386 ,{ 19.30837 , 24.32238 }},
{ 0.388 ,{ 19.62703 , 23.98881 }},
{ 0.39 ,{ 19.95651 , 23.64359 }},
{ 0.392 ,{ 20.27164 , 23.29843 }},
{ 0.394 ,{ 20.54987 , 22.96802 }},
{ 0.396 ,{ 20.81167 , 22.63753 }},
{ 0.398 ,{ 21.07613 , 22.29135 }},
{ 0.4 ,{ 21.3235 , 21.94503 }},
{ 0.402 ,{ 21.53573 , 21.61226 }},
{ 0.404 ,{ 21.72837 , 21.28427 }},
{ 0.406 ,{ 21.90671 , 20.95673 }},
{ 0.408 ,{ 22.08266 , 20.62907 }},
{ 0.41 ,{ 22.27487 , 20.29686 }},
{ 0.412 ,{ 22.46785 , 19.96583 }},
{ 0.414 ,{ 22.65649 , 19.64415 }},
{ 0.416 ,{ 22.82894 , 19.32095 }},
{ 0.418 ,{ 22.97496 , 18.99044 }},
{ 0.438 ,{ 24.04765 , 16.05103 }},
{ 0.44 ,{ 24.03197 , 15.67871 }},
{ 0.442 ,{ 24.07236 , 15.37526 }},
{ 0.444 ,{ 24.11854 , 15.08746 }},
{ 0.446 ,{ 24.16777 , 14.81229 }},
{ 0.448 ,{ 24.21726 , 14.54679 }},
{ 0.45 ,{ 24.26419 , 14.28806 }},
{ 0.452 ,{ 24.29302 , 14.02255 }},
{ 0.454 ,{ 24.31671 , 13.76108 }},
{ 0.456 ,{ 24.33551 , 13.50353 }},
{ 0.458 ,{ 24.34973 , 13.24984 }},
{ 0.46 ,{ 24.35965 , 12.9999 }},
{ 0.462 ,{ 24.36644 , 12.75231 }},
{ 0.464 ,{ 24.36925 , 12.5086 }},
{ 0.466 ,{ 24.36813 , 12.26897 }},
{ 0.468 ,{ 24.36312 , 12.03367 }},
{ 0.47 ,{ 24.35429 , 11.80288 }},
{ 0.472 ,{ 24.34001 , 11.57788 }},
{ 0.474 ,{ 24.32244 , 11.35756 }},
{ 0.476 ,{ 24.30211 , 11.14188 }},
{ 0.478 ,{ 24.27946 , 10.93077 }},
{ 0.48 ,{ 24.25497 , 10.72416 }},
{ 0.482 ,{ 24.22922 , 10.52269 }},
{ 0.484 ,{ 24.20253 , 10.32537 }},
{ 0.486 ,{ 24.17532 , 10.13194 }},
{ 0.488 ,{ 24.148 , 9.94211 }},
{ 0.49 ,{ 24.12098 , 9.75564 }},
{ 0.492 ,{ 24.09969 , 9.57289 }},
{ 0.494 ,{ 24.07823 , 9.39274 }},
{ 0.496 ,{ 24.05575 , 9.21476 }},
{ 0.498 ,{ 24.0314 , 9.03854 }},
{ 0.5 ,{ 24.00432 , 8.86369 }},
{ 0.502 ,{ 23.96881 , 8.68693 }},
{ 0.504 ,{ 23.93008 , 8.51154 }},
{ 0.506 ,{ 23.8885 , 8.33785 }},
{ 0.508 ,{ 23.84441 , 8.16619 }},
{ 0.51 ,{ 23.7982 , 7.99689 }},
{ 0.512 ,{ 23.75181 , 7.83105 }},
{ 0.514 ,{ 23.70362 , 7.66797 }},
{ 0.516 ,{ 23.6536 , 7.50781 }},
{ 0.518 ,{ 23.60171 , 7.35066 }},
{ 0.52 ,{ 23.54794 , 7.19665 }},
{ 0.522 ,{ 23.49164 , 7.04673 }},
{ 0.524 ,{ 23.43356 , 6.89997 }},
{ 0.526 ,{ 23.37381 , 6.75627 }},
{ 0.528 ,{ 23.31252 , 6.61553 }},
{ 0.53 ,{ 23.2498 , 6.47767 }},
{ 0.582 ,{ 21.83666 , 3.68234 }},
{ 0.584 ,{ 21.77031 , 3.60397 }},
{ 0.586 ,{ 21.70516 , 3.52658 }},
{ 0.588 ,{ 21.64106 , 3.4503 }},
{ 0.59 ,{ 21.57789 , 3.3752 }},
{ 0.592 ,{ 21.51648 , 3.30077 }},
{ 0.594 ,{ 21.45552 , 3.2279 }},
{ 0.596 ,{ 21.39467 , 3.15682 }},
{ 0.598 ,{ 21.33356 , 3.08782 }},
{ 0.6 ,{ 21.27187 , 3.02113 }},
{ 0.602 ,{ 21.20429 , 2.96121 }},
{ 0.604 ,{ 21.1367 , 2.90307 }},
{ 0.606 ,{ 21.06999 , 2.84592 }},
{ 0.608 ,{ 21.00505 , 2.78896 }},
{ 0.61 ,{ 20.94271 , 2.73142 }},
{ 0.612 ,{ 20.89122 , 2.66644 }},
{ 0.614 ,{ 20.84219 , 2.60079 }},
{ 0.616 ,{ 20.79464 , 2.53522 }},
{ 0.618 ,{ 20.74761 , 2.47046 }},
{ 0.62 ,{ 20.70015 , 2.40722 }},
{ 0.622 ,{ 20.64535 , 2.34784 }},
{ 0.624 ,{ 20.58974 , 2.29106 }},
{ 0.626 ,{ 20.53385 , 2.23722 }},
{ 0.628 ,{ 20.47821 , 2.18662 }},
{ 0.63 ,{ 20.42336 , 2.13961 }},
{ 0.632 ,{ 20.3743 , 2.105 }},
{ 0.634 ,{ 20.32599 , 2.07243 }},
{ 0.636 ,{ 20.27782 , 2.04011 }},
{ 0.638 ,{ 20.22922 , 2.00622 }},
{ 0.64 ,{ 20.17959 , 1.96901 }},
{ 0.642 ,{ 20.12408 , 1.91251 }},
{ 0.644 ,{ 20.06739 , 1.85273 }},
{ 0.646 ,{ 20.00999 , 1.79146 }},
{ 0.648 ,{ 19.95234 , 1.73044 }},
{ 0.65 ,{ 19.89493 , 1.67143 }},
{ 0.652 ,{ 19.84027 , 1.62547 }},
{ 0.654 ,{ 19.78631 , 1.5826 }},
{ 0.656 ,{ 19.73307 , 1.54223 }},
{ 0.658 ,{ 19.68049 , 1.50377 }},
{ 0.66 ,{ 19.62857 , 1.4666 }},
{ 0.662 ,{ 19.57767 , 1.42728 }},
{ 0.664 ,{ 19.52727 , 1.38882 }},
{ 0.666 ,{ 19.47721 , 1.35135 }},
{ 0.668 ,{ 19.42738 , 1.31501 }},
{ 0.67 ,{ 19.37763 , 1.27992 }},
{ 0.672 ,{ 19.32701 , 1.24757 }},
{ 0.674 ,{ 19.27643 , 1.2164 }},
{ 0.676 ,{ 19.22598 , 1.18622 }},
{ 0.678 ,{ 19.17573 , 1.15679 }},
{ 0.68 ,{ 19.12576 , 1.12793 }},
{ 0.682 ,{ 19.07634 , 1.09851 }},
{ 0.684 ,{ 19.0273 , 1.06949 }},
{ 0.686 ,{ 18.97866 , 1.04087 }},
{ 0.688 ,{ 18.93044 , 1.01271 }},
{ 0.69 ,{ 18.8827 , 0.98501 }},
{ 0.692 ,{ 18.83569 , 0.95784 }},
{ 0.694 ,{ 18.78912 , 0.93118 }},
{ 0.696 ,{ 18.74297 , 0.90506 }},
{ 0.698 ,{ 18.69719 , 0.87949 }},
{ 0.7 ,{ 18.65175 , 0.85448 }},
{ 0.702 ,{ 18.6056 , 0.82771 }},
{ 0.704 ,{ 18.55997 , 0.80213 }},
{ 0.706 ,{ 18.51509 , 0.77834 }},
{ 0.708 ,{ 18.47118 , 0.75693 }},
{ 0.71 ,{ 18.42846 , 0.73852 }},
{ 0.712 ,{ 18.38929 , 0.73255 }},
{ 0.714 ,{ 18.35122 , 0.7285 }},
{ 0.716 ,{ 18.31394 , 0.72474 }},
{ 0.718 ,{ 18.27713 , 0.71967 }},
{ 0.72 ,{ 18.24048 , 0.71167 }},
{ 0.722 ,{ 18.20067 , 0.68692 }},
{ 0.724 ,{ 18.16114 , 0.65912 }},
{ 0.726 ,{ 18.12232 , 0.62973 }},
{ 0.728 ,{ 18.08467 , 0.60018 }},
{ 0.73 ,{ 18.04862 , 0.5719 }},
{ 0.732 ,{ 18.01986 , 0.5538 }},
{ 0.734 ,{ 17.99228 , 0.53794 }},
{ 0.736 ,{ 17.96502 , 0.52388 }},
{ 0.77 ,{ 17.20766 , 0.32772 }},
{ 0.772 ,{ 17.17444 , 0.32479 }},
{ 0.774 ,{ 17.14439 , 0.32248 }},
{ 0.776 ,{ 17.11696 , 0.32027 }},
{ 0.778 ,{ 17.09162 , 0.31762 }},
{ 0.78 ,{ 17.06785 , 0.31399 }},
{ 0.782 ,{ 17.04442 , 0.3045 }},
{ 0.784 ,{ 17.02163 , 0.29406 }},
{ 0.786 ,{ 16.99915 , 0.28324 }},
{ 0.788 ,{ 16.97659 , 0.27261 }},
{ 0.79 ,{ 16.95361 , 0.2627 }},
{ 0.792 ,{ 16.92758 , 0.25771 }},
{ 0.794 ,{ 16.90096 , 0.25365 }},
{ 0.796 ,{ 16.87399 , 0.25018 }},
{ 0.798 ,{ 16.84686 , 0.24695 }},
{ 0.8 ,{ 16.81978 , 0.24362 }},
{ 0.802 ,{ 16.7935 , 0.237 }},
{ 0.804 ,{ 16.76753 , 0.2303 }},
{ 0.806 ,{ 16.74196 , 0.22387 }},
{ 0.808 ,{ 16.71685 , 0.21808 }},
{ 0.81 ,{ 16.69226 , 0.21327 }},
{ 0.812 ,{ 16.66891 , 0.21359 }},
{ 0.814 ,{ 16.64605 , 0.21466 }},
{ 0.816 ,{ 16.62362 , 0.21592 }},
{ 0.818 ,{ 16.60152 , 0.21676 }},
{ 0.82 ,{ 16.57966 , 0.21663 }},
{ 0.822 ,{ 16.55765 , 0.21034 }},
{ 0.824 ,{ 16.53577 , 0.20307 }},
{ 0.826 ,{ 16.51404 , 0.19538 }},
{ 0.828 ,{ 16.49242 , 0.18784 }},
{ 0.83 ,{ 16.47092 , 0.18101 }},
{ 0.832 ,{ 16.44952 , 0.17546 }},
{ 0.834 ,{ 16.42822 , 0.17174 }},
{ 0.836 ,{ 16.40701 , 0.17041 }},
{ 0.838 ,{ 16.38586 , 0.17204 }},
{ 0.84 ,{ 16.36478 , 0.17719 }}
})
pi = math.pi
polygons = {}

for line in io.lines("structures.txt") do
--     print('hello')
    for u in line:gmatch(line, "%a+") do
        geom = {}
        for w in (u .. "\t"):gmatch("([^\t]*)\t") do 
            table.insert(geom,tonumber(w)) 
--             print(tonumber(w))
        end
--         print('======')
        table.insert(polygons,geom)
    end
end

-- print(#polygons[1])
------------------------------------------------------------------------------------
for shape_count = 1,#polygons,1 do
    geom = polygons[shape_count]
    r1 = geom[1]/1000
    r2 = geom[2]/1000
    phi1 = geom[3]
    phi2 = geom[4]
    alpha = geom[5]
    P = 0.380
    t = 0.100
--     print(r1, r2, phi1, phi2, alpha, p, '\n', '============')

    points = (#geom-1)/2
    R = {} R1={} R2={} R3={} R4={} R5={} R6={} R7={} R8={} 
    Th = {} Th_1={} Th1={} Th2={} Th3={} Th4={} Th5={} Th6={} Th7={} Th8={}
    alpha = geom[2*points+1]
    
    for i = 1,points,1 do
        R1[i] = geom[i]/1000
        Th_1[i] = geom[i+points]
    end
    
    for i = 1,points,1 do
        R2[i] = R1[points+1-i]
        R3[i] = R1[i]
        R4[i] = R1[points+1-i]
        R5[i] = R1[i]
        R6[i] = R1[points+1-i]
        R7[i] = R1[i]
        R8[i] = R1[points+1-i]
    end
    
    s = 0
    for i = 1,points,1 do
        s = s+Th_1[i]
        Th1[i] = s
    end

    for i = 1,points,1 do Th1[i] = Th1[i]*(alpha/s) end
    
    for i = 1,points,1 do
        Th2[i] = (pi/2)-Th1[points+1-i]
        Th3[i] = (pi/2)+Th1[i]
        Th4[i] = pi-Th1[points+1-i]
        Th5[i] = pi+Th1[i]
        Th6[i] = (3*pi/2)-Th1[points+1-i]
        Th7[i] = (3*pi/2)+Th1[i]
        Th8[i] = -Th1[points+1-i]
    end
    
    for i = 1,points,1 do
        R[i] = R1[i]
        R[i+points] = R2[i]
        R[i+2*points] = R3[i]
        R[i+3*points] = R4[i]
        R[i+4*points] = R5[i]
        R[i+5*points] = R6[i]
        R[i+6*points] = R7[i]
        R[i+7*points] = R8[i]

        Th[i] = Th1[i]
        Th[i+points] = Th2[i]
        Th[i+2*points] = Th3[i]
        Th[i+3*points] = Th4[i]
        Th[i+4*points] = Th5[i]
        Th[i+5*points] = Th6[i]
        Th[i+6*points] = Th7[i]
        Th[i+7*points] = Th8[i]
    end
   
    XY={}
    for i = 1,8*points,1 do
        XY[2*i-1] = R[i]*math.cos(Th[i])
        XY[2*i] = R[i]*math.sin(Th[i])
    end
--     for i = 1,#XY,1 do print(XY[i]) end
--     print('----------------------------------')
    for lam = 0.400, 0.710, 0.010 do
        S = S4.NewSimulation()
        S:SetLattice({P,0}, {0,P})
        S:SetNumG(50)
        S:AddMaterial('Air', {1.00059,0})
        S:AddMaterial('P_Silicon', {1,0})
        S:AddMaterial('C_Silicon',{1,0})
        S:AddMaterial('SiO2',{2.1025,0})
        S:AddMaterial('A_Silicon', {1,0})

        S:AddLayer('Air_Top', 0, 'Air')
        S:AddLayer('Antenna',t, 'Air')
        S:AddLayer('Substrate', 0.115, 'SiO2')
        S:AddLayer('Air_Bot', 0, 'Air')
        -- S:AddLayer('Photo_Diode',0.005,'A_Silicon')
        S:SetLayerPatternPolygon('Antenna', 'A_Silicon', {0,0}, 0, XY)
        
        eps_real_asi,eps_imag_asi = indices_asi:Get(lam)
        S:SetMaterial('A_Silicon',{eps_real_asi,eps_imag_asi})
        freq = 1/lam
        
        S:SetFrequency(freq)
        S:SetExcitationPlanewave({0,0},{1,0},{0,0})
        tra, ref1 = S:GetPowerFlux('Air_Bot',0)
        tra1, ref = S:GetPowerFlux('Air_Top',0)
        out:write(tra.."\t"..-ref.."\n")

    end
end
------------------------------------------------------------------------------------